



---------------------------------------------------
1. Scaffolding
---------------------------------------------------


 1. Scaffolding a Quarkus project with Maven

    > mvn io.quarkus:quarkus-maven-plugin:1.7.3.Final:create

 2. Scaffolding a Quarkus project with Gradle

    > mvn io.quarkus:quarkus-maven-plugin:1.7.3.Final:create -DbuildTool=gradle

 3. Scaffolding a Quarkus project with  the Quarkus start coding website

    > https://code.quarkus.io/

4. Scaffolding a Quarkus project with  Eclipse/Inteelij IDEA/Visual studio code




---------------------------------------------------
2. Quarkus Project structure Overview
---------------------------------------------------


1. project structure & compile,test

2. Live Reloading with Dev Mode


---------------------------------------------------
3. Developing Restfull services 
---------------------------------------------------


 -> JAX-RS

    impln:

      - RESTEasy
      - Jersey
      
 -> Spring web-mvc



1. Creating a simple REST api Endpoint

2. Extracting request parameters

3. Using semantic HTTP Response  codes

4. Binding HTTP Method

5. Enable CORS


---------------------------------------------------
4. Quarkus Configuration
---------------------------------------------------

1. Configuring the application with custom properties

2. Accessing configuration properties programmatically

3. Overwriting configuration values externally

   - system properties   ( 1st priority ) 
   - environment Variables ( 2nd priority )
   - aplication properties/yaml Variables ( 3rd priority )

   or

   - depends on connfigsource ordinal

4. Configuring with profiles

   predefined profiles

   - dev
   - test
   - prod  

5. Configuring with custom profiles

6. Creating custom sources

7. Creating custom convertors



---------------------------------------------------
4. Quarkus - LOGS
---------------------------------------------------


1. changing Logger configuration

2. Adding Application Logs

Using

   -> JDK java.util.Logging
   -> JBOSS logging
   -> SLFJ
   -> Apache common Logging



---------------------------------------------------
5. Quarkus -  CDI
---------------------------------------------------


1. DI in Quarkus

2. Excuting Object Life Cycle Methods

3. Executing Application Life Cycle Events

4. creating interceptor

   

---------------------------------------------------
6. Quarkus - ??
---------------------------------------------------   

1. Marshalling/Unmarshalling JSON & XML

2. Validating Input and Output values

---------------------------------------------------



---------------------------------------------------
6. Quarkus - data Access
---------------------------------------------------   


1. defining datasource
2. using multiple datasources
3. Adding datasource Health check
4. hibernate / JPA - ORM
5. hibernate / JPA with panache wrapper
6. Defining Transactional boundaries declaratively
7. Programmatic Transactional control
8. setting and Modifying transaction timeout


------------------------------------------------------------------
6. Quarkus -  MicroServices  using MicroProfile  speficification
------------------------------------------------------------------

   -> open-api
   -> rest-client
   -> fault-tolerent
   -> health 
   -> open tracing


--------------------------------------------------------------



------------------------------------------------------------------
7. Quarkus -  packaging 
------------------------------------------------------------------

   1.Creating a Runnable JAR file
         > mvn clean package

   2. Uber-JAR packaging
         > mvn clean package -Dquarkus.package.uber-jar=true

   3. Building a native Executable

       Ref: https://quarkus.io/guides/building-native-image

         > mvn clean package -Pnative
         > mvn clean package -Pnative -Dquarkus.native.container-build=true  


   4. Building a Docker Container for JAR file
         > docker build -f src/main/docker/Dockerfile.jvm -t nagabhushanamn/quarkus-greeting-service . 

  
   5. Building a Docker Container for Native file
         > docker build -f src/main/docker/Dockerfile.native -t nagabhushanamn/quarkus-greeting-service .             


   ---------------------------------------------------------------------------




------------------------------------------------------------------
7. QUARKUS - CONTAINER IMAGE Extensions
------------------------------------------------------------------



   - JIB   
   - Docker
   - S2I

----------------------------------------------------------------   


------------------------------------------------------------------
7. QUARKUS - Kubernetes extension
------------------------------------------------------------------




 
 





